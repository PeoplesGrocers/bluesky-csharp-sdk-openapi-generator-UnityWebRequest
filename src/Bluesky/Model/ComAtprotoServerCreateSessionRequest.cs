/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Bluesky.Client.OpenAPIDateConverter;

namespace Bluesky.Model
{
    /// <summary>
    /// ComAtprotoServerCreateSessionRequest
    /// </summary>
    [DataContract(Name = "com_atproto_server_createSession_request")]
    public partial class ComAtprotoServerCreateSessionRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoServerCreateSessionRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ComAtprotoServerCreateSessionRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoServerCreateSessionRequest" /> class.
        /// </summary>
        /// <param name="identifier">Handle or other identifier supported by the server for the authenticating user. (required).</param>
        /// <param name="password">password (required).</param>
        public ComAtprotoServerCreateSessionRequest(string identifier = default(string), string password = default(string))
        {
            // to ensure "identifier" is required (not null)
            if (identifier == null)
            {
                throw new ArgumentNullException("identifier is a required property for ComAtprotoServerCreateSessionRequest and cannot be null");
            }
            this.Identifier = identifier;
            // to ensure "password" is required (not null)
            if (password == null)
            {
                throw new ArgumentNullException("password is a required property for ComAtprotoServerCreateSessionRequest and cannot be null");
            }
            this.Password = password;
        }

        /// <summary>
        /// Handle or other identifier supported by the server for the authenticating user.
        /// </summary>
        /// <value>Handle or other identifier supported by the server for the authenticating user.</value>
        [DataMember(Name = "identifier", IsRequired = true, EmitDefaultValue = true)]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or Sets Password
        /// </summary>
        [DataMember(Name = "password", IsRequired = true, EmitDefaultValue = true)]
        public string Password { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComAtprotoServerCreateSessionRequest {\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  Password: ").Append(Password).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
