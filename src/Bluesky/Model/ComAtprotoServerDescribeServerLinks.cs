/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Bluesky.Client.OpenAPIDateConverter;

namespace Bluesky.Model
{
    /// <summary>
    /// ComAtprotoServerDescribeServerLinks
    /// </summary>
    [DataContract(Name = "com.atproto.server.describeServer.links")]
    public partial class ComAtprotoServerDescribeServerLinks
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoServerDescribeServerLinks" /> class.
        /// </summary>
        /// <param name="privacyPolicy">privacyPolicy.</param>
        /// <param name="termsOfService">termsOfService.</param>
        public ComAtprotoServerDescribeServerLinks(string privacyPolicy = default(string), string termsOfService = default(string))
        {
            this.PrivacyPolicy = privacyPolicy;
            this.TermsOfService = termsOfService;
        }

        /// <summary>
        /// Gets or Sets PrivacyPolicy
        /// </summary>
        [DataMember(Name = "privacyPolicy", EmitDefaultValue = false)]
        public string PrivacyPolicy { get; set; }

        /// <summary>
        /// Gets or Sets TermsOfService
        /// </summary>
        [DataMember(Name = "termsOfService", EmitDefaultValue = false)]
        public string TermsOfService { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComAtprotoServerDescribeServerLinks {\n");
            sb.Append("  PrivacyPolicy: ").Append(PrivacyPolicy).Append("\n");
            sb.Append("  TermsOfService: ").Append(TermsOfService).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
