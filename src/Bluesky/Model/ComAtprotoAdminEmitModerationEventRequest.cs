/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Bluesky.Client.OpenAPIDateConverter;

namespace Bluesky.Model
{
    /// <summary>
    /// ComAtprotoAdminEmitModerationEventRequest
    /// </summary>
    [DataContract(Name = "com_atproto_admin_emitModerationEvent_request")]
    public partial class ComAtprotoAdminEmitModerationEventRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoAdminEmitModerationEventRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ComAtprotoAdminEmitModerationEventRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoAdminEmitModerationEventRequest" /> class.
        /// </summary>
        /// <param name="varEvent">varEvent (required).</param>
        /// <param name="subject">subject (required).</param>
        /// <param name="subjectBlobCids">subjectBlobCids.</param>
        /// <param name="createdBy">createdBy (required).</param>
        public ComAtprotoAdminEmitModerationEventRequest(ComAtprotoAdminEmitModerationEventRequestEvent varEvent = default(ComAtprotoAdminEmitModerationEventRequestEvent), ComAtprotoAdminEmitModerationEventRequestSubject subject = default(ComAtprotoAdminEmitModerationEventRequestSubject), List<string> subjectBlobCids = default(List<string>), string createdBy = default(string))
        {
            // to ensure "varEvent" is required (not null)
            if (varEvent == null)
            {
                throw new ArgumentNullException("varEvent is a required property for ComAtprotoAdminEmitModerationEventRequest and cannot be null");
            }
            this.VarEvent = varEvent;
            // to ensure "subject" is required (not null)
            if (subject == null)
            {
                throw new ArgumentNullException("subject is a required property for ComAtprotoAdminEmitModerationEventRequest and cannot be null");
            }
            this.Subject = subject;
            // to ensure "createdBy" is required (not null)
            if (createdBy == null)
            {
                throw new ArgumentNullException("createdBy is a required property for ComAtprotoAdminEmitModerationEventRequest and cannot be null");
            }
            this.CreatedBy = createdBy;
            this.SubjectBlobCids = subjectBlobCids;
        }

        /// <summary>
        /// Gets or Sets VarEvent
        /// </summary>
        [DataMember(Name = "event", IsRequired = true, EmitDefaultValue = true)]
        public ComAtprotoAdminEmitModerationEventRequestEvent VarEvent { get; set; }

        /// <summary>
        /// Gets or Sets Subject
        /// </summary>
        [DataMember(Name = "subject", IsRequired = true, EmitDefaultValue = true)]
        public ComAtprotoAdminEmitModerationEventRequestSubject Subject { get; set; }

        /// <summary>
        /// Gets or Sets SubjectBlobCids
        /// </summary>
        [DataMember(Name = "subjectBlobCids", EmitDefaultValue = false)]
        public List<string> SubjectBlobCids { get; set; }

        /// <summary>
        /// Gets or Sets CreatedBy
        /// </summary>
        [DataMember(Name = "createdBy", IsRequired = true, EmitDefaultValue = true)]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComAtprotoAdminEmitModerationEventRequest {\n");
            sb.Append("  VarEvent: ").Append(VarEvent).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  SubjectBlobCids: ").Append(SubjectBlobCids).Append("\n");
            sb.Append("  CreatedBy: ").Append(CreatedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
