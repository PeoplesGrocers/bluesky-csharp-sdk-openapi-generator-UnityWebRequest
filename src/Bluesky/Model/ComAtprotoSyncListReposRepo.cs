/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Bluesky.Client.OpenAPIDateConverter;

namespace Bluesky.Model
{
    /// <summary>
    /// ComAtprotoSyncListReposRepo
    /// </summary>
    [DataContract(Name = "com.atproto.sync.listRepos.repo")]
    public partial class ComAtprotoSyncListReposRepo
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoSyncListReposRepo" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ComAtprotoSyncListReposRepo() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoSyncListReposRepo" /> class.
        /// </summary>
        /// <param name="did">did (required).</param>
        /// <param name="head">Current repo commit CID (required).</param>
        /// <param name="rev">rev (required).</param>
        public ComAtprotoSyncListReposRepo(string did = default(string), string head = default(string), string rev = default(string))
        {
            // to ensure "did" is required (not null)
            if (did == null)
            {
                throw new ArgumentNullException("did is a required property for ComAtprotoSyncListReposRepo and cannot be null");
            }
            this.Did = did;
            // to ensure "head" is required (not null)
            if (head == null)
            {
                throw new ArgumentNullException("head is a required property for ComAtprotoSyncListReposRepo and cannot be null");
            }
            this.Head = head;
            // to ensure "rev" is required (not null)
            if (rev == null)
            {
                throw new ArgumentNullException("rev is a required property for ComAtprotoSyncListReposRepo and cannot be null");
            }
            this.Rev = rev;
        }

        /// <summary>
        /// Gets or Sets Did
        /// </summary>
        [DataMember(Name = "did", IsRequired = true, EmitDefaultValue = true)]
        public string Did { get; set; }

        /// <summary>
        /// Current repo commit CID
        /// </summary>
        /// <value>Current repo commit CID</value>
        [DataMember(Name = "head", IsRequired = true, EmitDefaultValue = true)]
        public string Head { get; set; }

        /// <summary>
        /// Gets or Sets Rev
        /// </summary>
        [DataMember(Name = "rev", IsRequired = true, EmitDefaultValue = true)]
        public string Rev { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComAtprotoSyncListReposRepo {\n");
            sb.Append("  Did: ").Append(Did).Append("\n");
            sb.Append("  Head: ").Append(Head).Append("\n");
            sb.Append("  Rev: ").Append(Rev).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
